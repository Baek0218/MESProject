<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mappers.instructMapper">
	
	<resultMap type="map" id="lineMap">
		<result property="lineCode" column="lineCode" />
		<result property="lineName" column="lineName" />
		<result property="proCode" column="proCode" />
	</resultMap>
	
	<resultMap type="map" id="itemMap">
		<result property="itemNum" column="itemNum" />
		<result property="itemName" column="itemName" />
		<result property="invntUnit" column="itemUnit" />
	</resultMap>
	
 	<resultMap type="map" id="instrMap">
 		<result property="instr_id" column="instr_id"/>
		<result property="workNum" column="workNum"/>
		<result property="workDate" column="workDate"/>
		<result property="workSts" column="workSts"/>
		<result property="workQty" column="workQty"/>
		<result property="insertDate" column="insertDate"/>
		<result property="insertId" column="insertId"/>
		<collection property="lineDTO" resultMap="lineMap" />
		<collection property="itemDTO" resultMap="itemMap" />
	</resultMap>
	
	<!-- instructList 메인 전체 select 구문 -->
	<select id="instrList" resultMap="instrMap">
		<include refid="List" />
		LIMIT #{startRow} , #{pageSize}
	</select>
	
	<!-- instructList 조회 select 구문 -->
	<select id="instrSearch" resultMap="instrMap">
		<include refid="List" />
		WHERE line.line_cd like CONCAT('%', #{instrSearch.lineName}, '%')
		<if test="startDate=='' and endDate==''">
		</if>
		<if test="startDate != '' and endDate != ''">
			AND work_dt BETWEEN	#{instrSearch.startDate} and #{instrSearch.endDate}
		</if>
		<if test="startDate != ''">
			AND work_dt &gt;= #{instrSearch.startDate}
		</if>
		<if test="endDate != ''">
			AND work_dt &lt;= #{instrSearch.endDate}
		</if>
		<choose>
			<when test="(workSts1=='' and workSts2=='' and workSts3=='') or (workSts1==null and workSts2==null and workSts3==null)">
			</when>
			<otherwise>
				AND (work_sts = #{instrSearch.workSts1} or work_sts = #{instrSearch.workSts2} or work_sts = #{instrSearch.workSts3})
			</otherwise>
		</choose>
		AND item.item_num LIKE CONCAT('%' , #{instrSearch.itemNum}, '%')
		ORDER BY work.instr_id
		LIMIT #{pageDTO.startRow}, #{pageDTO.pageSize}
	</select>
	
	<!-- 작업지시 전체 목록 개수 -->
	<select id="instrCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM work_instr
	</select>
	
	<!-- 작업지시 조회 목록 개수 -->
	<select id="instrSearchCount" resultType="java.lang.Integer">
		<include refid="SearchCount" />
		<include refid="Search" />
	</select>
	
	<sql id="List">
		SELECT work.instr_id, work.work_num as workNum, clnt.clnt_nm as clientName, oder.ord_num as orderNum, 
			   work.work_dt as workDate, work.work_sts as workSts,
          	   item.item_num as itemNum, item.item_nm as itemName, item.invnt_unit as itemUnit, 
          	   line.line_cd as lineCode, line.line_nm as lineName, line.pro_cd as proCode, 
          	   work.work_qty as workQty, work.insert_dt as insertDate, work.insert_id as insertId
		FROM work_instr work JOIN order_mng oder ON work.ord_id = oder.ord_id
        JOIN item item ON work.item_id = item.item_id
        JOIN client clnt ON item.clnt_id = clnt.clnt_id
        JOIN line line ON work.line_id = line.line_id
	</sql>
	
	<sql id="Search">
		WHERE line.line_cd like CONCAT('%', #{lineName}, '%')
		<if test="startDate != '' and endDate != ''">
			AND work_dt BETWEEN	#{startDate} and #{endDate}
		</if>
		<if test="startDate == '' and endDate == ''">
		</if>
		<if test="startDate != ''">
			AND work_dt &gt;= #{startDate}
		</if>
		<if test="endDate != ''">
			AND work_dt &lt;= #{endDate}
		</if>
		<choose>
			<when test="(workSts1=='' and workSts2=='' and workSts3=='') or (workSts1==null and workSts2==null and workSts3==null)">
			</when>
			<otherwise>
				AND (work_sts = #{workSts1} or work_sts = #{workSts2} or work_sts = #{workSts3})
			</otherwise>
		</choose>
		AND item.item_num LIKE CONCAT('%' , #{itemNum}, '%')
	</sql>
	
	<sql id="SearchCount">
		SELECT COUNT(*)as count, work.work_num as workNum, clnt.clnt_nm as clientName, oder.ord_num as orderNum, 
			   work.work_dt as workDate, work.work_sts as workSts,
          	   item.item_num as itemNum, item.item_nm as itemName, item.invnt_unit as itemUnit, 
          	   line.line_cd as lineCode, line.line_nm as lineName, line.pro_cd as proCode, 
          	   work.work_qty as workQty, work.insert_dt as insertDate, work.insert_id as insertId
		FROM work_instr work JOIN order_mng oder ON work.ord_id = oder.ord_id
        JOIN item item ON work.item_id = item.item_id
        JOIN client clnt ON item.clnt_id = clnt.clnt_id
        JOIN line line ON work.line_id = line.line_id
	</sql>

</mapper>