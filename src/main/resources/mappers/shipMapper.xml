<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mappers.shipMapper">

  <!--   출하 요청 리스트 -->
  <resultMap type="map" id="shipMap">
 		<result column="ord_id" property="ordId" />
  		<result column="ship_id" property="shipId" />
  		<result column="insert_id" property="insertId" />
  		<result column="insert_dt" property="insertDt" />
  		<result column="ship_num" property="shipNum" />
  		<result column="dlvry_dt" property="dlvryDt" />
  		<result column="ship_dt" property="shipDt" />
  		<result column="item_num" property="itemNum" />
  		<result column="item_nm" property="itemNm" />
  		<result column="item_id" property="itemId" />
  		<result column="barcord" property="barcord" />
  		<result column="invnt_unit" property="itemUnit"/> 
  		<result column="amount" property="amount" />
  		<result column="clnt_id" property="clntId" />
  		<result column="user_id" property="userId" />
  		<result column="id" property="userNum" />
  		<result column="ship_qty" property="shipQty" />
  		<result column="user_Nm" property="userNm" />
  		<result column="clnt_cd" property="clntCd" />
  		<result column="clnt_nm" property="clntNm" />
  		<result column="ord_num" property="ordNum" />
  		<result column="order_dt" property="orderDt" />
  		<result column="ord_qty" property="ordQty" />
  		<result column="cur_stock" property="curStock" />
  		
  		
  </resultMap>

    <select id="shipSCount" resultType="java.lang.Integer">
    	select count(*)
    	from ship_mng
    </select>
    
    
    <!-- 	shipAdmin 출하아이디 가져오기	 -->
    <select id="getShip" resultMap="shipMap">
    	select sh.ship_id, c.clnt_nm,sh.ship_dt,u.name as userNm, sh.dlvry_dt, i.item_num,i.item_nm,i.invnt_unit,sh.ship_qty,sh.ship_num
    	from client c join ship_mng sh
    	on sh.clnt_id = c.clnt_id
    	join user u
    	on sh.user_id = u.user_id
    	join item i
    	on sh.item_id = i.item_id
    	where sh.ship_id = #{shipId}
    	
    	
     </select>
    
    <!-- 	shipAdmin 조회 안할경우 페이지만 가져오기 -->
    <select id="getShipMap" resultMap="shipMap">
	select o.ord_id, o.ord_num, o.order_dt, o.dlvry_dt, i.item_num, i.item_nm, o.ord_qty, st.cur_stock, s.ship_qty, c.clnt_nm
	from order_mng o join item i
	on o.item_id = i.item_id
	join stock st
	on st.item_id = i.item_id
	left join ship_mng s
	on o.ord_id = s.ord_id
	join client c
	on o.clnt_id = c.clnt_id
	where o.cmplt_yn="Y"
	order by o.dlvry_dt desc
    limit #{startRow},#{pageSize}
    </select>
    
    
    <!-- 	shipAdmin 조회한 페이지 가져오기 -->
    <select id="getSearchShipMap" resultMap="shipMap">
    select o.ord_id, o.ord_num, o.order_dt, o.dlvry_dt, i.item_num, i.item_nm, o.ord_qty, st.cur_stock, s.ship_qty, c.clnt_nm
	from order_mng o join item i
	on o.item_id = i.item_id
	join stock st
	on st.item_id = i.item_id
	left join ship_mng s
	on o.ord_id = s.ord_id
	join client c
	on o.clnt_id = c.clnt_id
	where o.cmplt_yn="Y" and
     c.clnt_nm like CONCAT('%', #{clntNm}, '%')  
    	<if test="Dlvdate!='' and eDlvdate!=''"> and o.dlvry_dt between #{Dlvdate} and #{eDlvdate}</if>
		<if test="Dlvdate=='' and eDlvdate==''"></if>
		<if test="Dlvdate!='' and Dlvdate!=null "> and o.dlvry_dt &gt;= #{Dlvdate}</if>
		<if test="eDlvdate!='' and eDlvdate!=null"> and o.dlvry_dt &lt;= #{eDlvdate}</if>

		order by o.dlvry_dt desc
		limit #{startRow}, #{pageSize}
    </select>
    
    
    
    <select id="getorder" resultMap="shipMap">
	select o.ord_id, o.ord_num, o.order_dt, o.dlvry_dt, i.invnt_unit, i.item_num, i.item_nm, i.item_id, o.ord_qty, st.cur_stock, s.ship_qty, c.clnt_nm, c.clnt_id
	from order_mng o join item i
	on o.item_id = i.item_id
	join stock st
	on st.item_id = i.item_id
	left join ship_mng s
	on o.ord_id = s.ord_id
	join client c
	on o.clnt_id = c.clnt_id
	where o.cmplt_yn="Y"
	and o.ord_id = #{ordId}
    </select>
    

    <select id="countShip" resultType="java.lang.Integer">
    select count(*)
	from order_mng o join item i
	on o.item_id = i.item_id
	join stock st
	on st.item_id = i.item_id
	left join ship_mng s
	on o.ord_id = s.ord_id
	join client c
	on o.clnt_id = c.clnt_id
 	where o.cmplt_yn="Y" 
 	<if test="clntNm!=null and Dlvdate!=null and eDlvdate!=null">
     and c.clnt_nm like CONCAT('%', #{clntNm}, '%')  
    	<if test="Dlvdate!='' and eDlvdate!=''"> and o.dlvry_dt between #{Dlvdate} and #{eDlvdate}</if>
		<if test="Dlvdate=='' and eDlvdate==''"></if>
		<if test="Dlvdate!='' and Dlvdate!=null "> and o.dlvry_dt &gt;= #{Dlvdate}</if>
		<if test="eDlvdate!='' and eDlvdate!=null"> and o.dlvry_dt &lt;= #{eDlvdate}</if>
	</if>
    
    </select>
    
    
    
    <!-- 	shipList 조회 안할경우 페이지만 가져오기 -->
    	<select id="getListMap" resultMap="shipMap">
    		select sh.ship_id, sh.ship_num, c.clnt_nm,sh.dlvry_dt as Dlvdate, u.name as userNm, i.item_num,
    					i.item_nm,i.invnt_unit, sh.ship_dt as Shdate,sh.ship_qty
    		from client c join ship_mng sh
    		on sh.clnt_id = c.clnt_id
    		join item i
    		on sh.item_id = i.item_id
    		join user u
    		on sh.user_id = u.user_id
    		order by Dlvdate desc
    		limit #{startRow},#{pageSize}
    	</select>
    	
    	<!-- 	shipList 조회한 페이지 가져오기 -->
    	<select id="getListShipMap" resultMap="shipMap">
    		select sh.ship_id,sh.ship_num,c.clnt_nm,sh.dlvry_dt as Dlvdate, u.name as userNm,i.item_num,
    					i.item_nm,i.invnt_unit, sh.ship_dt as Shdate,sh.ship_qty
    		from client c join ship_mng sh
    		on sh.clnt_id = c.clnt_id
    		join item i
    		on sh.item_id = i.item_id
    		join user u
    		on sh.user_id = u.user_id
    		
    		where clnt_nm like CONCAT('%', #{clntNm}, '%')
    		
    		<if test="Dlvdate!=''"> and sh.dlvry_dt = #{Dlvdate}</if>
			<if test="Shdate!=''"> and sh.ship_dt = #{Shdate}</if>
    	
    		and
			item_num like CONCAT('%', #{itemNum}, '%')
	
			and
			item_nm like CONCAT('%', #{itemNm}, '%')

			and
			name like CONCAT('%', #{userNm}, '%')
			
			<if test="cmpltYn!=''">	and sh.cmplt_yn = #{cmpltYn}</if>
		
			order by Dlvdate desc
			limit #{startRow}, #{pageSize}
    	</select>
    	
    	
    	<!-- 	ship 하나만 아이디 가져오기	 -->
	<select id="getShipOrderId" resultType="com.itwillbs.ship.domain.ShipDTO">
	select *
	from ship_mng
	where ord_id = #{ordId}
	</select>
    	
    
    <!-- 	shipList 조회할때 갯수와 조회값 가져오기 -->
<!--     <select id="countListShip" resultType="java.lang.Integer"> -->
<!--     	select count(*) -->
<!--     	from client c join ship_mng sh -->
<!--     	on sh.clnt_id = c.clnt_id -->
<!--     	join item i -->
<!--     	on sh.item_id = i.item_id -->
<!--     	join user u -->
<!--     	on sh.user_id = u.user_id -->
    	
<!--     	<if test="(shipNum != null and clntNm != null and Dlvdate != null and -->
<!-- 		 userNm != null and itemNum != null and itemNm != null and invntUnit != null and Shdate != null -->
<!-- 		  and shipQty != null and shipCond != null)"> -->
    
<!--     	where clnt_nm like CONCAT('%', #{clntNm}, '%') -->
    	
<!--     	and -->
<!-- 		item_num like CONCAT('%', #{itemNum}, '%') -->

<!-- 		and -->
<!-- 		item_nm like CONCAT('%', #{itemNm}, '%') -->
		
<!-- 		and -->
<!-- 		name like CONCAT('%', #{userNm}, '%') -->
    
<!--     	</if>     -->
<!--     </select> -->
    
    <select id="getItemList"
		resultType="com.itwillbs.ship.domain.ItemDTO">
		select
		item_id as itemId,
		item_num as itemNum,
		item_nm as itemNm,
		invnt_unit as invntUnit
		from item
		<if test="itemNum!=null and itemNm!=null">
			where
			item_num like CONCAT('%', #{itemNum}, '%') and
			item_nm like CONCAT('%', #{itemNm}, '%')
		</if>
		order by itemNum desc
		limit #{startRow}, #{pageSize}

	</select>
	
	
	<select id="countItemList" resultType="java.lang.Integer">
		select
		count(*)
		from item
		<if test="itemNum!=null and itemNm!=null">
			where
			item_num like CONCAT('%', #{itemNum}, '%') and
			item_nm like CONCAT('%', #{itemNm}, '%')
		</if>
	</select>
	
		
	<select id="getUserList"
		resultType="com.itwillbs.ship.domain.UserDTO">
		select
		user_id as userId,
		id as userNum,
		name as userNm
		from user
		<if test="userNum!=null and userNm!=null">
			where
			id like CONCAT('%', #{userNum}, '%') and
			name like
			CONCAT('%', #{userNm}, '%')
		</if>
		order by id desc
		limit #{startRow}, #{pageSize}
	</select>
    
    
    <select id="countUserList" resultType="java.lang.Integer">
		select
		count(*)
		from user
		<if test="userNum!=null and userNm!=null">
			where
			id like CONCAT('%', #{userNum}, '%') and
			name like
			CONCAT('%', #{userNm}, '%')
		</if>
	</select>
    
    
    	<select id="getClntList"
		resultType="com.itwillbs.order.domain.clntDTO">
		select
		clnt_cd as clntCd,
		clnt_nm as clntNm,
		clnt_id as clntId
		from client
		<if test="clntCd!=null and clntNm!=null">
			where
			clnt_cd like CONCAT('%', #{clntCd}, '%') and
			clnt_nm
			like CONCAT('%', #{clntNm}, '%')
		</if>
		order by clnt_cd desc
		limit #{startRow}, #{pageSize}
	</select>
    
    
    <select id="countClntList" resultType="java.lang.Integer">
		select
		count(*)
		from client
		<if test="clntCd!=null and clntNm!=null">
			where
			clnt_cd like CONCAT('%', #{clntCd}, '%') and
			clnt_nm
			like CONCAT('%', #{clntNm}, '%')
		</if>
	</select>
    

<!-- 	출하관리 납품 추가하기 -->
	<insert id="insertShip">
		insert into ship_mng
		(ship_num,ord_id,insert_id,insert_dt,dlvry_dt,clnt_id,item_id, ship_qty, ship_dt, cmplt_yn)
		values(#{shipNum},#{ordId},#{insertId},#{insertDt},#{dlvryDt},#{clntId},#{itemId}, #{shipQty}, #{shipDt}, #{cmpltYn})
	</insert>
	
	<!-- 	출하관리 납품 추가하기 -->
	<insert id="insertShipOrder">
		insert into ship_mng
		(clnt_id,dlvry_dt,user_id,ship_dt,item_id,ship_qty,insert_id,insert_dt,ship_num)
		values(#{clntId},#{dlvryDt},#{userId},#{shipDt},#{itemId},#{shipQty},#{insertId},#{insertDt},#{shipNum})
	</insert>

<!-- 	출하관리 납품 수정하기 -->
	<update id="updateShip">
		update ship_mng
		set clnt_id = #{clntId}, dlvry_dt = #{dlvryDt}, user_id = #{userId}, ship_dt = #{shipDt},
				item_id = #{itemId}, ship_qty = #{shipQty}, update_id = #{updateId}, update_dt = #{updateDt}
				where ship_id = #{shipId}
	</update>
	
<!-- 	출하현황 수정 -->
	<update id="updateCond">
	update ship_mng 
	set 
	cmplt_yn = "Y"
	where ship_id = #{shipId}
	</update>
	
<!-- 	출하관리 납품 삭제 -->
	<delete id="deleteShip">
		delete from ship_mng
		where ship_id = #{shipId}
	</delete>
	
<!-- 	출하현황삭제 -->
	<delete id="deleteCond">
	delete from ship_mng
	where ship_id = #{shipId}
	</delete>






    
    
<!--      material list --> 
<!--     <select id="MaterialList" resultMap="com.itwillbs.ship.domain.MaterialDTO"> -->
<!--     	select -->
<!-- 		in_mtrl_qty as inmtrlQty, -->
<!-- 		out_mtrl_qty as outmtrlQty, -->
<!-- 		cur_stock as curStrock -->
<!-- 		from client -->
<!-- 		<if test="inmtrlQty!=null and outmtrlQty!=null"> -->
<!-- 			where -->
<!-- 			in_mtrl_qty like CONCAT('%', #{inmtrlQty}, '%') and -->
<!-- 			out_mtrl_qty	like CONCAT('%', #{outmtrlQty}, '%') -->
<!-- 		</if> -->
<!-- 		order by cur_stock desc -->
<!-- 		limit #{startRow}, #{pageSize} -->
<!--     </select> -->
    
<!--      material count -->
<!--     <select id="countMaterialList" resultMap="java.lang.Integer"> -->
<!--     	select -->
<!-- 		count(*) -->
<!-- 		from client -->
<!-- 		<if test="clntCd!=null and clntNm!=null"> -->
<!-- 			where -->
<!-- 			clnt_cd like CONCAT('%', #{clntCd}, '%') and -->
<!-- 			clnt_nm	like CONCAT('%', #{clntNm}, '%') -->
<!-- 		</if> -->
<!--     </select>     -->
    

   
</mapper>
